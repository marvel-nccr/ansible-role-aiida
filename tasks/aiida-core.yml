---
- name: Install DB & more (apt)
  become: true
  become_user: "{{ root_user }}"
  apt:
    name:
      - virtualenvwrapper
      # database
      - postgresql
      - postgresql-server-dev-all
      - postgresql-client
      - libpq-dev
      # For AiiDA
      - libffi-dev
      - libssl-dev
      - graphviz
      - python-pip
      - virtualenvwrapper

- name: Install python2 packages (apt)
  become: true
  become_user: "{{ root_user }}"
  apt:
    name:
      - python-pip
      - python-psycopg2
      # ASE visualizer
      # Needed for the ASE visualizer
      - python-gtk2

# This can be necessary on docker
- name: Make sure postgres service is started
  become: true
  become_user: "{{ root_user }}"
  service:
    name: "postgresql"
    state: "started"

- name: Setup postgres db
  become: true
  become_user: "{{ aiida_postgres_user }}"
  postgresql_db:
    name: "{{ aiida_postgres_db }}"

- name: Setup postgres db user
  become: true
  become_user: "{{ aiida_postgres_user }}"
  postgresql_user:
    db: "{{ aiida_postgres_db }}"
    name: "{{ aiida_postgres_db_user }}"
    password: "{{ aiida_postgres_db_pw }}"
    # password: "{{ aiida_postgres_db_pw | string | password_hash('sha512') }}"
    encrypted: true

- name: install virtualenv
  become: true
  become_user: "{{ root_user }}"
  pip:
    name: virtualenv

# Need to install numpy before aiida-core because otherwise the pymatgen
# install is broken, see https://github.com/materialsproject/pymatgen/issues/1520
- name: Install numpy & pip
  pip:
    name:
      - pip==19.0.3
      - numpy==1.16.4
    virtualenv: "{{ aiida_venv }}"
    virtualenv_site_packages: true

- name: Install pip packages
  pip:
    name:
      - aiida=={{ aiida_version }}
      - seekpath
    virtualenv: "{{ aiida_venv }}"
    virtualenv_site_packages: true
  register: pip_install
  notify: reentry scan

# get anyway the GIT code, it is often useful; checkout the same version (now actually we are forcing a different branch/tag...)
- name: Get the AiiDA code from GIT
  git:
    repo: 'https://github.com/aiidateam/aiida_core.git'
    dest: "${HOME}/codes/aiida_core"
    version: "{{ aiida_tag }}"
    force: true

## PyGTK cannot be installed with pip... we need to use
## a workaround, see https://stackoverflow.com/questions/12830662/
- name: workaround to install pygtk 2 inside the virtualenv [making dir]
  file:
    path: "{{ aiida_venv }}/lib/python2.7/dist-packages/"
    state: "directory"
    mode: 0755

- name: workaround to install pygtk 2 inside the virtualenv [creating symlinks]
  file:
    src: "/usr/lib/python2.7/dist-packages/{{ item }}"
    dest: "{{ aiida_venv }}/lib/python2.7/dist-packages/{{ item }}"
    state: link
  with_items:
    - glib
    - gobject
    - gtk-2.0
    - pygtk.pth
    - pygtk.py
    - cairo

- name: "Activate TAB completion in virtualenv"
  lineinfile:
    path: "{{ aiida_venv }}/bin/activate"
    line: 'eval "$(verdi completioncommand)"'

- name: "Check if AiiDA has already been configured"
  stat: path="${HOME}/.aiida/config.json"
  register: aiida_config_file

- name: "Configure AiiDA"
  # Need to use the full path because it's in a virtualenv
  shell: |
       {{ aiida_venv }}/bin/verdi setup {{ aiida_profile_name }} --non-interactive \
       --email aiida@localhost \
       --backend django \
       --db_host localhost --db_port 5432 \
       --db_name {{ aiida_postgres_db }} \
       --db_user {{ aiida_postgres_db_user }} --db_pass '{{ aiida_postgres_db_pw  }}' \
       --repo ${HOME}/.aiida/repository-aiida/
  when: not aiida_config_file.stat.exists

  #     --db_user {{ aiida_postgres_db_user }} --db_pass '{{ aiida_postgres_db_pw | string | password_hash("sha512")  }}' \

- name: "Set the default AiiDA profile"
  shell: "{{ aiida_venv }}/bin/verdi profile setdefault {{ item }} {{ aiida_profile_name }}"
  with_items:
    - verdi
    - daemon
  # not ideal - better to read default profile from config
  when: not aiida_config_file.stat.exists

- include_role:
    name: release_notes
  vars:
    section: "AiiDA"
    option: "version"
    value: "{{ aiida_version }}"
  when: release_notes is defined and release_notes

- include_role:
    name: release_notes
  vars:
    section: "AiiDA"
    option: "usage"
    value: >-
        AiiDA is installed in a virtual environment.
        Type 'workon aiida' to get access to the 'verdi' commands.
  when: release_notes is defined and release_notes
