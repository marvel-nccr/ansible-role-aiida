- block:
  - name: Start Postgresql service
    become: true
    become_user: "{{ root_user }}"
    service:
      name: "postgresql"
      state: "started"
      enabled: true

  - name: Start RabbitMQ service
    become: true
    become_user: "{{ root_user }}"
    service:
      name: "rabbitmq-server"
      state: "started"
      enabled: true
  when: ansible_service_mgr == "systemd"

- block:
  - name: Check if Postgresql is running
    shell: pgrep postgres
    changed_when: false
  rescue:
  - name: Start Postgresql
    become: true
    become_user: "{{ aiida_postgres_user }}"
    command: "{{ aiida_postgres_bin_location }}/pg_ctl start -D {{ aiida_postgres_data_location }} -s -o '-p 5432' -w -t 300"
  when: ansible_service_mgr != "systemd"

- block:
  - name: Check if RabbitMQ is running
    shell: pgrep rabbitmq
    changed_when: false
  rescue:
  - name: Start RabbitMQ
    become: true
    become_user: "{{ root_user }}"
    shell: rabbitmq-server > /dev/null 2>&1 &
  when: ansible_service_mgr != "systemd"

- name: Setup postgres db
  become: true
  become_user: "{{ aiida_postgres_user }}"
  postgresql_db:
    name: "{{ aiida_postgres_db }}"

- name: Setup postgres db user
  become: true
  become_user: "{{ aiida_postgres_user }}"
  postgresql_user:
    db: "{{ aiida_postgres_db }}"
    name: "{{ aiida_postgres_db_user }}"
    password: "{{ aiida_postgres_db_pw }}"
    encrypted: true

- name: "create python{{ aiida_python_version }} virtual env: {{ aiida_venv }}"
  import_role:
    name: marvel-nccr.python
  vars:
    python_base_version: "{{ aiida_python_version }}"
    python_install_dev: true  # required to install pymatgen
    python_install_tk: true  # required by ase.gui
    # TODO add https://github.com/marvel-nccr/ansible-role-python/issues/6 when implemented
    python_venv_path: "{{ aiida_venv }}"
    python_venv_packages:
    - pip~=20.0
    - setuptools
    - wheel
    - numpy  # required by pymatgen
  register: pip_install
  notify: reentry scan

- name: Install virtualenvwrapper globally
  become: true
  become_user: "{{ root_user }}"
  pip:
    executable: "/usr/local/bin/pip{{ aiida_python_version }}"
    name:
    - virtualenvwrapper

- name: "Let virtualenvwrapper use the correct python version"
  lineinfile:
    path: "${HOME}/.bashrc"
    regexp: "export VIRTUALENVWRAPPER_PYTHON=.*"
    line: "export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python{{ aiida_python_version }}"

- name: add aiida templates folder
  become: true
  become_user: "{{ root_user }}"
  file:
    path: "{{ aiida_templates_folder |  regex_replace('\\$\\{HOME}', current_user_home) }}"
    state: "directory"
    mode: 0755
    owner: "{{ current_user }}"

- name: add aiida data folder
  become: true
  become_user: "{{ root_user }}"
  file:
    path: "{{ aiida_data_folder |  regex_replace('\\$\\{HOME}', current_user_home) }}"
    state: "directory"
    mode: 0755
    owner: "{{ current_user }}"
